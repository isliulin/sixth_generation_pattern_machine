---- send_dsp_command Matches (156 in 4 files) ----
stepper_function.c (project_code\Applications\User\src) line 1027 : extern void send_dsp_command(uint8_t port, uint16_t command, uint16_t us_delay);
stepper_init in stepper_function.c (project_code\Applications\User\src) : 		send_dsp_command(0, 0x0027);
stepper_init in stepper_function.c (project_code\Applications\User\src) : 		send_dsp_command(0, 10);//打开DSP1的PWM,相当于打开锁轴功能，参数为闭环动作到位后切开环锁轴之前的延时
stepper_init in stepper_function.c (project_code\Applications\User\src) : 		send_dsp_command(1, 0x0027);
stepper_init in stepper_function.c (project_code\Applications\User\src) : 		send_dsp_command(1, 10);//打开DSP1的PWM,相当于打开锁轴功能，参数为闭环动作到位后切开环锁轴之前的延时
stepper_init in stepper_function.c (project_code\Applications\User\src) : 		send_dsp_command(2, 0x0027);
stepper_init in stepper_function.c (project_code\Applications\User\src) : 		send_dsp_command(2, 10);//打开DSP2的PWM,相当于打开锁轴功能，参数为闭环动作到位后切开环锁轴之前的延时
stepper_check_motion_done in stepper_function.c (project_code\Applications\User\src) : 	send_dsp_command(dsp_port, 0x001B);
stepper_check_motion_done in stepper_function.c (project_code\Applications\User\src) : 	send_dsp_command(dsp_port, dsp_channel);
stepper_check_motion_done in stepper_function.c (project_code\Applications\User\src) : 	send_dsp_command(dsp_port, 6);
stepper_check_motion_done in stepper_function.c (project_code\Applications\User\src) : 	send_dsp_command(dsp_port, 1);
stepper_check_motion_done in stepper_function.c (project_code\Applications\User\src) : 	send_dsp_command(dsp_port, 0x5555);
stepper_pause in stepper_function.c (project_code\Applications\User\src) : 	send_dsp_command(dsp_port, 0x001B);
stepper_pause in stepper_function.c (project_code\Applications\User\src) : 	send_dsp_command(dsp_port, dsp_channel);
stepper_pause in stepper_function.c (project_code\Applications\User\src) : 	send_dsp_command(dsp_port, 5);
stepper_pause in stepper_function.c (project_code\Applications\User\src) : 	send_dsp_command(dsp_port, 0);
stepper_pause in stepper_function.c (project_code\Applications\User\src) : 	send_dsp_command(dsp_port, 0x5555);
stepper_pause in stepper_function.c (project_code\Applications\User\src) : 	send_dsp_command(dsp_port, 0x001B);
stepper_pause in stepper_function.c (project_code\Applications\User\src) : 	send_dsp_command(dsp_port, dsp_channel);
stepper_pause in stepper_function.c (project_code\Applications\User\src) : 	send_dsp_command(dsp_port, 7);
stepper_pause in stepper_function.c (project_code\Applications\User\src) : 	send_dsp_command(dsp_port, 0);
stepper_pause in stepper_function.c (project_code\Applications\User\src) : 	send_dsp_command(dsp_port, 0x5555);
stepper_motor_move in stepper_function.c (project_code\Applications\User\src) : 		send_dsp_command(dsp_port, u16_temp_data);
stepper_motor_move in stepper_function.c (project_code\Applications\User\src) : 		send_dsp_command(dsp_port,0x0000);
stepper_motor_move in stepper_function.c (project_code\Applications\User\src) : 		send_dsp_command(dsp_port,u16_temp_data);
stepper_motor_move in stepper_function.c (project_code\Applications\User\src) : 		send_dsp_command(dsp_port,u16_temp_data);
stepper_motor_move in stepper_function.c (project_code\Applications\User\src) : 		send_dsp_command(dsp_port,time);
stepper_get_z_status in stepper_function.c (project_code\Applications\User\src) : 	send_dsp_command(dsp_port, 0x001B);
stepper_get_z_status in stepper_function.c (project_code\Applications\User\src) : 	send_dsp_command(dsp_port, dsp_channel);
stepper_get_z_status in stepper_function.c (project_code\Applications\User\src) : 	send_dsp_command(dsp_port, 10);
stepper_get_z_status in stepper_function.c (project_code\Applications\User\src) : 	send_dsp_command(dsp_port, 1);
stepper_get_z_status in stepper_function.c (project_code\Applications\User\src) : 	send_dsp_command(dsp_port, 0x5555);
stepper_function.c (project_code\Applications\User\src) line 2090 : send_dsp_command(1, 0x001A);	//packet1——6G电机配置指令：0x001A
stepper_function.c (project_code\Applications\User\src) line 2091 : send_dsp_command(1, 0x0001);	//packet2——配置此DSP上的电机1
stepper_function.c (project_code\Applications\User\src) line 2092 : send_dsp_command(1, 0x0001);	//packet3——工作模式：1-设置为闭环步进
stepper_function.c (project_code\Applications\User\src) line 2093 : send_dsp_command(1, 0x0005);	//packet4——设置电流采样电阻为20mΩ
stepper_function.c (project_code\Applications\User\src) line 2094 : send_dsp_command(1, 512);		//packet5——设置步距角系数：步距角单位是0.09/512°
stepper_function.c (project_code\Applications\User\src) line 2095 : send_dsp_command(1, 1000);		//packet6——设置编码器线数：只能设置为400或者1000
stepper_function.c (project_code\Applications\User\src) line 2096 : send_dsp_command(1, 4*2979);	//packet7——设置全流电流值：65536表示11A，2979表示0.5A
stepper_function.c (project_code\Applications\User\src) line 2097 : send_dsp_command(1, 2*2979);	//packet8——设置半流电流值：65536表示11A，2979表示0.5A
stepper_function.c (project_code\Applications\User\src) line 2098 : send_dsp_command(1, 10);		//packet9——闭环动作到位后切开环锁轴之前的延时
stepper_function.c (project_code\Applications\User\src) line 2099 : send_dsp_command(1, 20);		//packet10——设置超差阈值：这个单位是自己设定的步，而不是最小的步距角
stepper_function.c (project_code\Applications\User\src) line 2100 : send_dsp_command(1, 20);		//packet11——设置超差时间：单位是ms，当超差量连续这个时间超过阈值将报错
stepper_function.c (project_code\Applications\User\src) line 2101 : send_dsp_command(1, 3); 		//packet12——设置精度系数：单位1/256mm，1步=(n+1)mm/256
stepper_function.c (project_code\Applications\User\src) line 2102 : send_dsp_command(1, 0x0FFF);	//packet13——新老算法选择：0-新算法(伺服模式)，0-老算法(恒幅值模式)
stepper_setup_motor in stepper_function.c (project_code\Applications\User\src) : 	send_dsp_command(dsp_port, 0x001A);//packet1——6G电机配置指令：0x001A
stepper_setup_motor in stepper_function.c (project_code\Applications\User\src) : 	send_dsp_command(dsp_port, dsp_channel);//packet2——配置此DSP上的电机1
stepper_setup_motor in stepper_function.c (project_code\Applications\User\src) : 	send_dsp_command(dsp_port, p_motor_handle->cfg_para.BBBB_working_mode);//packet3——工作模式：1-设置为闭环步进
stepper_setup_motor in stepper_function.c (project_code\Applications\User\src) : 	send_dsp_command(dsp_port, p_motor_handle->cfg_para.CCCC_sampling_resistor);//packet4——设置电流采样电阻为20mΩ
stepper_setup_motor in stepper_function.c (project_code\Applications\User\src) : 	send_dsp_command(dsp_port, p_motor_handle->cfg_para.DDDD_stepper_angle_coefficient);//packet5——设置步距角系数：步距角单位是0.09/512°
stepper_setup_motor in stepper_function.c (project_code\Applications\User\src) : 	send_dsp_command(dsp_port, p_motor_handle->cfg_para.EEEE_encoder_line_number);//packet6——设置编码器线数：只能设置为400或者1000
stepper_setup_motor in stepper_function.c (project_code\Applications\User\src) : 	send_dsp_command(dsp_port, p_motor_handle->cfg_para.FFFF_full_current*2979);//packet7——设置全流电流值：65536表示11A，2979表示0.5A
stepper_setup_motor in stepper_function.c (project_code\Applications\User\src) : 	send_dsp_command(dsp_port, p_motor_handle->cfg_para.GGGG_half_current*2979);//packet8——设置半流电流值：65536表示11A，2979表示0.5A
stepper_setup_motor in stepper_function.c (project_code\Applications\User\src) : 	send_dsp_command(dsp_port, p_motor_handle->cfg_para.HHHH_current_change_time);//packet9——闭环动作到位后切开环锁轴之前的延时
stepper_setup_motor in stepper_function.c (project_code\Applications\User\src) : 	send_dsp_command(dsp_port, p_motor_handle->cfg_para.IIII_out_of_tolerance_threshold_value);//packet10——设置超差阈值：这个单位是自己设定的步，而不是最小的步距角
stepper_setup_motor in stepper_function.c (project_code\Applications\User\src) : 	send_dsp_command(dsp_port, p_motor_handle->cfg_para.JJJJ_out_of_tolerance_threshold_time);//packet11——设置超差时间：单位是ms，当超差量连续这个时间超过阈值将报错
stepper_setup_motor in stepper_function.c (project_code\Applications\User\src) : 	send_dsp_command(dsp_port, p_motor_handle->cfg_para.KKKK_precision_coefficient);//packet12——设置精度系数：单位1/256mm，1步=(n+1)mm/256
stepper_setup_motor in stepper_function.c (project_code\Applications\User\src) : 	send_dsp_command(dsp_port, p_motor_handle->cfg_para.LLLL_choose_working_mode);//packet13——新老算法选择：0-新算法(伺服模式)，0-老算法(恒幅值模式)
stepper_function.h (project_code\Applications\User\inc) line 141 : send_dsp_command(1, 0x001A);	//packet1——6G电机配置指令：0x001A
stepper_function.h (project_code\Applications\User\inc) line 142 : send_dsp_command(1, 0x0003);	//packet2——配置此DSP上的电机2
stepper_function.h (project_code\Applications\User\inc) line 143 : send_dsp_command(1, 0x0001);	//packet3——工作模式：1-设置为闭环步进
stepper_function.h (project_code\Applications\User\inc) line 144 : send_dsp_command(1, 0x0005);	//packet4——设置电流采样电阻为20mΩ
stepper_function.h (project_code\Applications\User\inc) line 145 : send_dsp_command(1, 512);		//packet5——设置步距角系数：步距角单位是0.09/512°
stepper_function.h (project_code\Applications\User\inc) line 146 : send_dsp_command(1, 400);		//packet6——设置编码器线数：只能设置为400或者1000
stepper_function.h (project_code\Applications\User\inc) line 147 : send_dsp_command(1, 4*2979);	//packet7——设置全流电流值：65536表示11A，2979表示0.5A
stepper_function.h (project_code\Applications\User\inc) line 148 : send_dsp_command(1, 2*2979);	//packet8——设置半流电流值：65536表示11A，2979表示0.5A
stepper_function.h (project_code\Applications\User\inc) line 149 : send_dsp_command(1, 10);		//packet9——闭环动作到位后切开环锁轴之前的延时
stepper_function.h (project_code\Applications\User\inc) line 150 : send_dsp_command(1, 20);		//packet10——设置超差阈值：这个单位是自己设定的步，而不是最小的步距角
stepper_function.h (project_code\Applications\User\inc) line 151 : send_dsp_command(1, 20);		//packet11——设置超差时间：单位是ms，当超差量连续这个时间超过阈值将报错
stepper_function.h (project_code\Applications\User\inc) line 152 : send_dsp_command(1, 3); 		//packet12——设置精度系数：单位1/256mm，1步=(n+1)mm/256
stepper_function.h (project_code\Applications\User\inc) line 153 : send_dsp_command(1, 0x0FFF);	//packet13——新老算法选择：0-新算法(伺服模式)，0-老算法(恒幅值模式)
step_motor_drv.c (project_code\Applications\User\src) line 230 : //void send_dsp_command(uint8_t port,uint16_t command)
step_motor_drv.c (project_code\Applications\User\src) line 232 : void send_dsp_command(uint8_t port, uint16_t command, uint16_t us_delay)
send_dsp1_command in step_motor_drv.c (project_code\Applications\User\src) :      send_dsp_command(1,command,500);
send_dsp1_command in step_motor_drv.c (project_code\Applications\User\src) : 	 send_dsp_command(1,data,500);
send_dsp2_command in step_motor_drv.c (project_code\Applications\User\src) : 	 send_dsp_command(2,command,500);
send_dsp2_command in step_motor_drv.c (project_code\Applications\User\src) : 	 send_dsp_command(2,data,500);
send_dsp3_command in step_motor_drv.c (project_code\Applications\User\src) : 	 send_dsp_command(3,command,500);
send_dsp3_command in step_motor_drv.c (project_code\Applications\User\src) : 	 send_dsp_command(3,data,500);
send_dsp4_command in step_motor_drv.c (project_code\Applications\User\src) : 	 send_dsp_command(4,command,500);
send_dsp4_command in step_motor_drv.c (project_code\Applications\User\src) : 	 send_dsp_command(4,data,500);
nop_move_emergency in step_motor_drv.c (project_code\Applications\User\src) : 		send_dsp_command(1,0x0005);
nop_move_emergency in step_motor_drv.c (project_code\Applications\User\src) : 		send_dsp_command(1,0x0009);
process_quickmove_data in step_motor_drv.c (project_code\Applications\User\src) : 	send_dsp_command(dspn,0x0000);
process_quickmove_data in step_motor_drv.c (project_code\Applications\User\src) : 	send_dsp_command(dspn,high16);	
process_quickmove_data in step_motor_drv.c (project_code\Applications\User\src) : 	send_dsp_command(dspn,low16);	
process_quickmove_data in step_motor_drv.c (project_code\Applications\User\src) : 	send_dsp_command(dspn,quick_time);
send_stepmotor_up_drv in step_motor_drv.c (project_code\Applications\User\src) : 	 send_dsp_command(download_drv_flag,0x00F0);	    
send_stepmotor_up_drv in step_motor_drv.c (project_code\Applications\User\src) : 		send_dsp_command(download_drv_flag,((uint16_t)k<<8) + pat_buf[k]);
send_stepmotor_end_drv in step_motor_drv.c (project_code\Applications\User\src) : 	 send_dsp_command(download_drv_flag,0x00FF);	 
jump_to_begin in step_motor_drv.c (project_code\Applications\User\src) : 		send_dsp_command(1,0x000F);
jump_to_begin in step_motor_drv.c (project_code\Applications\User\src) : 		send_dsp_command(2,0x000F);
jump_to_begin in step_motor_drv.c (project_code\Applications\User\src) : 		send_dsp_command(3,0x000F);
jump_to_begin in step_motor_drv.c (project_code\Applications\User\src) : 		send_dsp_command(4,0x000F);
setup_stepper_moter in step_motor_drv.c (project_code\Applications\User\src) : 	send_dsp_command(1, 0x001A);	//packet1——6G电机配置指令：0x001A
setup_stepper_moter in step_motor_drv.c (project_code\Applications\User\src) : 	send_dsp_command(1, 0x0001);	//packet2——配置此DSP上的电机1
setup_stepper_moter in step_motor_drv.c (project_code\Applications\User\src) : 	send_dsp_command(1, 0x0001);	//packet3——工作模式：1-设置为闭环步进
setup_stepper_moter in step_motor_drv.c (project_code\Applications\User\src) : 	send_dsp_command(1, 0x0005);	//packet4——设置电流采样电阻为20mΩ
setup_stepper_moter in step_motor_drv.c (project_code\Applications\User\src) : 	send_dsp_command(1, 512);		//packet5——设置步距角系数：步距角单位是0.09/512°
setup_stepper_moter in step_motor_drv.c (project_code\Applications\User\src) : 	send_dsp_command(1, 1000);		//packet6——设置编码器线数：只能设置为400或者1000
setup_stepper_moter in step_motor_drv.c (project_code\Applications\User\src) : 	send_dsp_command(1, 4*2979);	//packet7——设置全流电流值：65536表示11A，2979表示0.5A
setup_stepper_moter in step_motor_drv.c (project_code\Applications\User\src) : 	send_dsp_command(1, 2*2979);	//packet8——设置半流电流值：65536表示11A，2979表示0.5A
setup_stepper_moter in step_motor_drv.c (project_code\Applications\User\src) : 	send_dsp_command(1, 10);		//packet9——闭环动作到位后切开环锁轴之前的延时
setup_stepper_moter in step_motor_drv.c (project_code\Applications\User\src) : 	send_dsp_command(1, 20);		//packet10——设置超差阈值：这个单位是自己设定的步，而不是最小的步距角
setup_stepper_moter in step_motor_drv.c (project_code\Applications\User\src) : 	send_dsp_command(1, 20);		//packet11——设置超差时间：单位是ms，当超差量连续这个时间超过阈值将报错
setup_stepper_moter in step_motor_drv.c (project_code\Applications\User\src) : 	send_dsp_command(1, 3);			//packet12——设置精度系数：单位1/256mm，1步=(n+1)mm/256
setup_stepper_moter in step_motor_drv.c (project_code\Applications\User\src) : 	send_dsp_command(1, 0x0FFF);	//packet13——新老算法选择：0-新算法(伺服模式)，0-老算法(恒幅值模式)
setup_stepper_moter in step_motor_drv.c (project_code\Applications\User\src) :     send_dsp_command(1,20);//超差时间
setup_stepper_moter in step_motor_drv.c (project_code\Applications\User\src) :     send_dsp_command(1,20);//超差时间
setup_stepper_moter in step_motor_drv.c (project_code\Applications\User\src) :     send_dsp_command(1, 0x001A);	//packet1——6G电机配置指令：0x001A
setup_stepper_moter in step_motor_drv.c (project_code\Applications\User\src) : 	send_dsp_command(1, 0x0002);	//packet2——配置此DSP上的电机2
setup_stepper_moter in step_motor_drv.c (project_code\Applications\User\src) : 	send_dsp_command(1, 0x0001);	//packet3——工作模式：1-设置为闭环步进
setup_stepper_moter in step_motor_drv.c (project_code\Applications\User\src) : 	send_dsp_command(1, 0x0005);	//packet4——设置电流采样电阻为20mΩ
setup_stepper_moter in step_motor_drv.c (project_code\Applications\User\src) : 	send_dsp_command(1, 512);		//packet5——设置步距角系数：步距角单位是0.09/512°
setup_stepper_moter in step_motor_drv.c (project_code\Applications\User\src) : 	send_dsp_command(1, 1000);		//packet6——设置编码器线数：只能设置为400或者1000
setup_stepper_moter in step_motor_drv.c (project_code\Applications\User\src) : 	send_dsp_command(1, 4*2979);	//packet7——设置全流电流值：65536表示11A，2979表示0.5A
setup_stepper_moter in step_motor_drv.c (project_code\Applications\User\src) : 	send_dsp_command(1, 2*2979);	//packet8——设置半流电流值：65536表示11A，2979表示0.5A
setup_stepper_moter in step_motor_drv.c (project_code\Applications\User\src) : 	send_dsp_command(1, 10);		//packet9——闭环动作到位后切开环锁轴之前的延时
setup_stepper_moter in step_motor_drv.c (project_code\Applications\User\src) : 	send_dsp_command(1, 20);		//packet10——设置超差阈值：这个单位是自己设定的步，而不是最小的步距角
setup_stepper_moter in step_motor_drv.c (project_code\Applications\User\src) : 	send_dsp_command(1, 20);		//packet11——设置超差时间：单位是ms，当超差量连续这个时间超过阈值将报错
setup_stepper_moter in step_motor_drv.c (project_code\Applications\User\src) : 	send_dsp_command(1, 3);			//packet12——设置精度系数：单位1/256mm，1步=(n+1)mm/256
setup_stepper_moter in step_motor_drv.c (project_code\Applications\User\src) : 	send_dsp_command(1, 0x0FFF);	//packet13——新老算法选择：0-新算法(伺服模式)，0-老算法(恒幅值模式)
setup_stepper_moter in step_motor_drv.c (project_code\Applications\User\src) :     send_dsp_command(1,20);//超差时间
setup_stepper_moter in step_motor_drv.c (project_code\Applications\User\src) :     send_dsp_command(1, 0x001A);	//packet1——6G电机配置指令：0x001A
setup_stepper_moter in step_motor_drv.c (project_code\Applications\User\src) : 	send_dsp_command(1, 0x0003);	//packet2——配置此DSP上的电机2
setup_stepper_moter in step_motor_drv.c (project_code\Applications\User\src) : 	send_dsp_command(1, 0x0001);	//packet3——工作模式：1-设置为闭环步进
setup_stepper_moter in step_motor_drv.c (project_code\Applications\User\src) : 	send_dsp_command(1, 0x0005);	//packet4——设置电流采样电阻为20mΩ
setup_stepper_moter in step_motor_drv.c (project_code\Applications\User\src) : 	send_dsp_command(1, 512);		//packet5——设置步距角系数：步距角单位是0.09/512°
setup_stepper_moter in step_motor_drv.c (project_code\Applications\User\src) : 	send_dsp_command(1, 400);		//packet6——设置编码器线数：只能设置为400或者1000
setup_stepper_moter in step_motor_drv.c (project_code\Applications\User\src) : 	send_dsp_command(1, 4*2979);	//packet7——设置全流电流值：65536表示11A，2979表示0.5A
setup_stepper_moter in step_motor_drv.c (project_code\Applications\User\src) : 	send_dsp_command(1, 2*2979);	//packet8——设置半流电流值：65536表示11A，2979表示0.5A
setup_stepper_moter in step_motor_drv.c (project_code\Applications\User\src) : 	send_dsp_command(1, 10);		//packet9——闭环动作到位后切开环锁轴之前的延时
setup_stepper_moter in step_motor_drv.c (project_code\Applications\User\src) : 	send_dsp_command(1, 20);		//packet10——设置超差阈值：这个单位是自己设定的步，而不是最小的步距角
setup_stepper_moter in step_motor_drv.c (project_code\Applications\User\src) : 	send_dsp_command(1, 20);		//packet11——设置超差时间：单位是ms，当超差量连续这个时间超过阈值将报错
setup_stepper_moter in step_motor_drv.c (project_code\Applications\User\src) : 	send_dsp_command(1, 3);			//packet12——设置精度系数：单位1/256mm，1步=(n+1)mm/256
setup_stepper_moter in step_motor_drv.c (project_code\Applications\User\src) : 	send_dsp_command(1, 0x0FFF);	//packet13——新老算法选择：0-新算法(伺服模式)，0-老算法(恒幅值模式)
setup_stepper_moter in step_motor_drv.c (project_code\Applications\User\src) : 	send_dsp_command(1,sys_para.DSP1_para_27);			//闭环动作到位后切开环锁轴之前的延时
setup_stepper_moter in step_motor_drv.c (project_code\Applications\User\src) : 	send_dsp_command(1,sys_para.DSP1_para_27);			//闭环动作到位后切开环锁轴之前的延时
setup_stepper_moter in step_motor_drv.c (project_code\Applications\User\src) :     send_dsp_command(1,sys_para.DSP1_para_28L);
write_stepmotor_config_para in step_motor_drv.c (project_code\Applications\User\src) : 		send_dsp_command(1,0x0003);//写入步进配置参数
write_stepmotor_config_para in step_motor_drv.c (project_code\Applications\User\src) : 		send_dsp_command(2,0x0003);//写入步进配置参数
write_stepmotor_config_para in step_motor_drv.c (project_code\Applications\User\src) : 			 send_dsp_command(1,((uint16_t)k<<8) + (uint16_t)pdata[k] );
write_stepmotor_config_para in step_motor_drv.c (project_code\Applications\User\src) : 			 send_dsp_command(2,((uint16_t)k<<8) + (uint16_t)pdata[k] );
write_stepmotor_curve in step_motor_drv.c (project_code\Applications\User\src) : 	 send_dsp_command(port,0x000B);//写入步进曲线参数
write_stepmotor_curve in step_motor_drv.c (project_code\Applications\User\src) : 		send_dsp_command(port,val );
write_stepmotor_curve in step_motor_drv.c (project_code\Applications\User\src) : 	 send_dsp_command(port,crc );
get_IORG_statu in step_motor_drv.c (project_code\Applications\User\src) : 		send_dsp_command(2,0x5555);
get_CORG_statu in step_motor_drv.c (project_code\Applications\User\src) : 	send_dsp_command(2,0x5555,500);
multipule_program_beginning in step_motor_drv.c (project_code\Applications\User\src) : 	send_dsp_command(port,0x1100);//切换程序
send_multipule_program_data in step_motor_drv.c (project_code\Applications\User\src) : 	 send_dsp_command(port,0x1101);//写入程序	    
send_multipule_program_data in step_motor_drv.c (project_code\Applications\User\src) : 		send_dsp_command(port,((uint16_t)k<<8) + pat_buf[k]);
read_multipule_program_status in step_motor_drv.c (project_code\Applications\User\src) : 	send_dsp_command(port,0x1102);//状态查询
read_multipule_program_status in step_motor_drv.c (project_code\Applications\User\src) : 	send_dsp_command(port,0x5555);
multipule_program_end in step_motor_drv.c (project_code\Applications\User\src) : 	 send_dsp_command(port,0x1104);//升级完成	 
system.c (project_code\Applications\User\src) line 13 : extern void send_dsp_command(uint8_t port, uint16_t command, uint16_t us_delay);
ready_status in system.c (project_code\Applications\User\src) : 		//send_dsp_command(1,0x0041);
---- send_dsp_command Search Errors Encountered (8) ----
The following 8 files could not be processed:
E:\zla_git\sixth_generation_pattern_machine\project_code\Applications\Motor\src\mc_config.c : File could not be opened.
E:\zla_git\sixth_generation_pattern_machine\project_code\Applications\Motor\inc\mc_config.h : File could not be opened.
E:\zla_git\sixth_generation_pattern_machine\project_code\Applications\Motor\src\mc_control.c : File could not be opened.
E:\zla_git\sixth_generation_pattern_machine\project_code\Applications\Motor\inc\mc_control.h : File could not be opened.
E:\zla_git\sixth_generation_pattern_machine\project_code\Applications\Motor\src\mc_curve.c : File could not be opened.
E:\zla_git\sixth_generation_pattern_machine\project_code\Applications\Motor\inc\mc_curve.h : File could not be opened.
E:\zla_git\sixth_generation_pattern_machine\project_code\Applications\Motor\src\mc_driver.c : File could not be opened.
E:\zla_git\sixth_generation_pattern_machine\project_code\Applications\Motor\inc\mc_driver.h : File could not be opened.
